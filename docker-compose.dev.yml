version: '3.8'

services:
  # Development version with hot reload
  image-optimization-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder # Use builder stage for development
    container_name: image-optimization-dev
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3000
      # Optimized for Piscina and image processing
      - UV_THREADPOOL_SIZE=24
      - SHARP_CACHE_MEMORY=3072
      - SHARP_CONCURRENCY=0  # Let Piscina handle concurrency
      # Piscina configuration
      - PISCINA_THREADS=6
      - PISCINA_IDLE_TIMEOUT=30000
      # Node.js memory optimization
      - NODE_OPTIONS=--max-old-space-size=4096
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:ro
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      # Mount node_modules as volume to avoid conflicts
      - node_modules:/app/node_modules
    restart: unless-stopped
    networks:
      - dev-network
    command: npm run start:debug
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '3.0'
        reservations:
          memory: 3G
          cpus: '1.5'

  # Database and cache services for development
  redis-dev:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - image-optimization-network

volumes:
  node_modules:
  redis_dev_data:

networks:
  dev-network:
    driver: bridge
  image-optimization-network:
    driver: bridge